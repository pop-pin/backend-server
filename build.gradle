plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.poppin'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jib {
	from {
		image = 'amazoncorretto:17-alpine-jdk'
	}
	to {
		image = 'poppinteam/backend-server'
		tags = ['git rev-parse --verify --short HEAD'.execute().text.trim(), 'latest']
	}
	container {
		ports = ["8080"]
//		jvmFlags = ['-Dspring.profiles.active=prod', '-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8', '-javaagent:/elastic-apm/elastic-apm-agent.jar', '-Delastic.apm.service_name=backend-server', '-Delastic.apm.server_url=http://apm-server-apm-server.elastic.svc.cluster.local:8200', '-Delastic.apm.secret_token=', '-Delastic.apm.environment=production', '-Delastic.apm.application_packages=com.poppin']
		jvmFlags = [
			'-Dspring.profiles.active=prod',
			'-XX:+UseContainerSupport',
			'-Dserver.port=8080',
			'-Dfile.encoding=UTF-8',
			'-javaagent:/otel/opentelemetry-javaagent.jar',
			'-Dotel.exporter=otel',
			'-Dotel.service.name=backend-server',
			'-Dotel.exporter.otlp.endpoint=http://grafana-agent.tempo.svc.cluster.local:4317',
			'-Dotel.exporter.otlp.insecure=true',
			'-Dlogging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG',
			'-Dlogging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg traceID=%X{traceId} %n'
		]
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
